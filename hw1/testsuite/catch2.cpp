#define CATCH_CONFIG_MAIN
#include <catch2/catch_test_macros.hpp>
#include <catch2/catch_all.hpp>
#include "ustring.hpp"

TEST_CASE("UString", "[length]")
{
	UString u1(U"Ô¥æ–ò–∑–º–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏Ô¥ø");
	REQUIRE(u1.length() == 36);
	u1 = "";
	REQUIRE(u1.length() == 0);
}

TEST_CASE("UString", "[std_string]")
{
	UString u1("123");
	REQUIRE(u1.length() == 3);
	u1 = "";
	REQUIRE(u1.length() == 0);
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
TEST_CASE("UString", "[constructor_vs_assign]")
{
	UString u1("456");
	UString u2("");
	u2 = "456";
	REQUIRE( u1 == u2 );
}

#ifdef	DEBUG
TEST_CASE("UString", "[same_assignment]")
{
	UString u1("abc");
	UString u2(u1);
	u2 = "abc";
	REQUIRE( u1 == u2 );
	REQUIRE( u2.debug_ == "Skip assigment of the same text." );
	UString u3("");
	REQUIRE( u3.debug_ == "Skip assigment of the same text in constructor." );
}
#endif

TEST_CASE("UString", "[size]")
{
	UString u1(U"Ô¥æ–ò–∑–º–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞Ô¥ø");
	REQUIRE(u1.size() == 48);
	u1 = "";
	REQUIRE(u1.size() == 0);
}

TEST_CASE("UString", "[add]")
{
	UString u1(U"–°—Ç—Ä–æ–∫–∞ ");
	UString u2(U"—Ö–æ—Ä–æ—à–∞—è.");
	UString u3(U"–°—Ç—Ä–æ–∫–∞ —Ö–æ—Ä–æ—à–∞—è.");
	u1 += u2;
	REQUIRE(u1 == u3);
	u1 = u1 + u2;
	u3 = U"–°—Ç—Ä–æ–∫–∞ —Ö–æ—Ä–æ—à–∞—è.—Ö–æ—Ä–æ—à–∞—è.";
	REQUIRE(u1 == u3);
}

TEST_CASE("UString", "[not_equal]")
{
	UString u1(U"–°—Ç—Ä–æ–∫–∞");
	UString u2(U"–°—Ç—Ä–æ–∫–∞");
	u2.pop_back();
	REQUIRE(u1 != u2);
}

TEST_CASE("UString", "[push_back]")
{
	UString u1("");
	UString u2(U"‡πÄ‡∏™‡∏ô");
	u1.push_back("‡πÄ");
	u1.push_back("‡∏™");
	u1.push_back("‡∏ô");
	REQUIRE(u1 == u2);
}

TEST_CASE("UString", "[pop_back]")
{
	UString u1(U"–ê–ëìÇ∏");
	UString u2(U"–ê–ëìÇ∏Ïä§");
	u2.pop_back();
	REQUIRE(u1 == u2);
	u1 = "";
	u2 = "";
	u2.pop_back();
	REQUIRE(u1 == u2);
}

TEST_CASE("UString", "[is_well]")
{
// –ò–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –±—ã–ª –ø–µ—Ä–µ–ø–∏—Å–∞–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è –ø—Ä–∏—Å–≤–æ–∏—Ç—å —Å—Ç—Ä–æ–∫–µ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
// –í —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—è, –∫–æ–≥–¥–∞ is_well –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç False
/*
	UString u1("\xff");
	INFO("Section 1");
	REQUIRE_FALSE(u1.is_well());
	u1 = U"–ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π UTF-—Ç–µ–∫—Å—Ç";
	INFO("Section 2");
	CHECK(u1.is_well());
*/
	INFO("Section with throws");
	REQUIRE_THROWS([&](){
		UString u1("\xff");
	}());
}

TEST_CASE("UString", "[iterator]")
{
	UString u1(U"–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [iterator]");
	UString u2(U"ZZ[–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [iterator]]XX");
	auto i2 = u2.begin();
	++i2; // –ü—Ä–æ–ø—É—Å—Ç–∏–º –ø–µ—Ä–≤—ã–µ 3 —Å–∏–º–≤–æ–ª–∞ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
	++i2;
	++i2;
	for( auto i = u1.begin(); i != u1.end(); i++ ) {
		REQUIRE(*i == *i2);
		i2++;
	}
}

TEST_CASE("UString", "[iterator_not_equal]")
{
	UString u1(U"–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [iterator_not_equal]");
	auto i1 = u1.begin();
	auto i2 = u1.begin();
	INFO("==");
	REQUIRE(i1 == i2);
	INFO("!=");
	i1++;
	REQUIRE(i1 != i2);
}

TEST_CASE("UString", "[reverse][iterator]")
{
	UString u1(U"–¢–µ–∫—Å—Ç 2 –¥–ª—è —Ç–µ—Å—Ç–∞ „ÉÜ„Ç≠„Çπ„Éà„Çí„ÉÜ„Çπ„Éà„Åó„Åæ„Åô„ÄÇ#Ôªº");
	UString u2(U"Ôªº#„ÄÇ„Åô„Åæ„Åó„Éà„Çπ„ÉÜ„Çí„Éà„Çπ„Ç≠„ÉÜ –∞—Ç—Å–µ—Ç —è–ª–¥ 2 —Ç—Å–∫–µ–¢");
	auto i2 = u2.end();
	for( auto i = u1.begin(); i != u1.end(); i++ ) {
		--i2;
		REQUIRE(*i == *i2);
	}
}

#ifdef DEBUG
TEST_CASE("UString", "[iterator_limits]")
{
	UString u1(U"–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [iterator_limits] --");
	UString u2(U"–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [iterator_limits] ++");
	auto i1 = u1.begin();
	auto i2 = u2.end();
	--i1;
	REQUIRE(u1.debug_ == "Ignore an attempt to go beyond begin().");
	++i2;
	REQUIRE(u2.debug_ == "Ignore an attempt to go beyond end().");
}
#endif

TEST_CASE("UString", "[output]")
{
	UString u1(U"–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [output] „ÉÜ„Ç≠„Çπ„Éà„Çí„ÉÜ„Çπ„Éà„Åó„Åæ„Åô„ÄÇ#Ôªº ‚ôÇ‚ôÄ‚ößüë¨üë≠ìÄª ìÄº ìÄΩ ìÄæ ìÄø ìÅÄ ìÅÅ ìÅÇ ìÅÉ ìÅÑ ìÅÖ ìÅÜ ìÅá ìÅà ìÅâ ìÅä ìÅã ìÅå ìÅç ìÅé ìÅè");
	std::stringstream ss;
	ss << u1;
	REQUIRE(ss.str() == "–¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ [output] „ÉÜ„Ç≠„Çπ„Éà„Çí„ÉÜ„Çπ„Éà„Åó„Åæ„Åô„ÄÇ#Ôªº ‚ôÇ‚ôÄ‚ößüë¨üë≠ìÄª ìÄº ìÄΩ ìÄæ ìÄø ìÅÄ ìÅÅ ìÅÇ ìÅÉ ìÅÑ ìÅÖ ìÅÜ ìÅá ìÅà ìÅâ ìÅä ìÅã ìÅå ìÅç ìÅé ìÅè");
}
